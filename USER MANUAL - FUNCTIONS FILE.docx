add_[PANEL]_to_variable(x)
There are several panel-specific functions that pull various pieces of information from STAT panels into variable ‘x.’ For each panel, information stored in variable ‘x’ is formatted to make it more useable for case noting (the function is called in a number of scripts – think CAF, CSR, HCAPP – to pre-populate edit boxes to allow the worker to review the information before it is dumped into a case note).
NOTE: [PANEL] simply refers to the specific STAT panel which is necessary as there are 10 separate functions, one for each of the STAT panels listed below…
ACCI		ACCT		BUSI		CARS		JOBS
OTHR		RBIC		REST		SECU		UNEA


attn
This function has two elements. It sends <attn> (which BlueZone recognizes as ESCAPE) and an EMWaitReady to make sure that BlueZone has navigated to the MAI: Primary Menu.


autofill_editbox_from_MAXIS(HH_member_array, panel_read_from, variable_written_to)
This function is used to pull STAT panel-specific information for a specific household member into a case note template. For each member of the household, the script navigates to the STAT panels listed below, pulls information – if there is any – and runs it through the function “add_[PANEL]_to_variable(x)” to make it more shiny and compatible with the dialog edit boxes and with case noting.
HH_member_array is the function that allows the user to determine which household members need to have panels read and which ones to ignore.
panel_fread_from tells the function the STAT panel to which the function navigates.
variable_written_to is the variable that collects all the information from that STAT panel and organizes it into a format that is compatible with the dialog edit boxes and with the case noting.
A function has been created for the following STAT panels…
ABPS		ACCI		ACCT		ADDR		BILS
CARS		CASH		COEX		DCEX		DIET
DISA		EATS		FACI		FMED		HCRE
HEST		IMIG		INSA		JOBS		MEMB
MEMI		MONT		OTHR		PBEN		PREG
PROG		RBIC		REST		REVW		SCHL
SECU		SHEL		STWK		UNEA		WREG

back_to_SELF
This function navigates the user back to the MAXIS SELF screen. The function sends PF3 until it reads “SELF” at the specific coordinates (2, 50).
convert_digit_to_excel_column(col_in_excel)
This function returns the alphabetic reference for an Excel column. Because the scripts interact with Excel columns as numbers – like 1 or 27 rather than “A” or “AA” – this function converts the Excel-friendly column indicator into a user-friendly column indicator.
This function is limited to column number 104.
convert_excel_letter_to_excel_number(excel_col)
This function converts the user-friendly Excel column into an Excel-friendly column. This enables users to simply enter “AA” instead of 27.

create_array_of_all_active_x_numbers_in_county(array_name, county_code)



create_MAXIS_friendly_date(date_variable, variable_length, screen_row, screen_col)
This function takes a and modifies it to make it more compatible with the “MM DD YY” format most commonly used on STAT panels.
date_variable is the variable the user uses to pass through a date.
variable_length tells the function how many days to add to the current inputted date (date_variable).
 screen_row & screen_col gives the function the MAXIS coordinates to EMWriteScreen the date.
fix_case(phrase_to_split, smallest_length_to_skip)

ERRR_screen_check
This function is used to getting past STAT/ERRR for “Error Prone” cases – SNAP cases with an FMED panel. If the function reads “ERRR” at the given coordinates, it transmits one more time to get past STAT/ERRR.

end_excel_and_script



find_variable(x, y, z)
This function is used to fill a variable by first checking for an inputted string and then prompting the script to read a specific length of characters.
For finding the a client’s race in STAT/MEMB, the function starts by looking for the string x (“Race: “), then looks for variable client_race (y), and for 20 characters (z). To use the function to find the case number, the function needs to be called:
call find_variable(“Case Nbr: “, case_number, 20)
…and if the string Race: is found, the function reads the next 20 characters and stores them as the variable client_race.
get_to_MMIS_session_begin
This function is used in MMIS to back out – without committing any changes – of MMIS until the function reads “SESSION TERMINATED.”
HH_member_custom_dialog(HH_member_array)
This function reads the household members, dumps them into an array and generates a dynamic dialog allowing the user to select only the case-specific household members. The selected household members go into a new array that is used by other functions to read the STAT panels for ONLY those selected household members. This allows users to avoid case noting information from unaffiliated persons or persons that do not affect the case.
log_usage_stats_without_closing
This function gathers script name and usage time and dumps it into an Access database allowing agencies to collect usage statistics.
MAXIS_background_check
This function checks whether a case is still in background by determining whether MAXIS is still on the SELF screen.
MAXIS_case_number_finder(variable_for_MAXIS_case_number)
This function is similar to “find_variable(x, y, z)” except that it specifically looks only for the variable case_number.
MAXIS_check_function
This function makes sure that the user is in MAXIS or that the user has not timed out and needs to re-enter their password. If the function does not find “MAXIS” or “AXIS “ at the top of the screen, it stops the script with a warning message.
memb_navigation_next


memb_navigation_prev


MMIS_RKEY_finder


navigate_to_screen(x, y)
This function allows the user to quickly navigate to a specific screen. Information entered into the variable x is sent to the function line, information entered into the variable y is sent to the command line, and the function transmits to send MAXIS to that screen. The function needs the variable case_number to be not blank to work.

navigate_to_PRISM_screen(x)
This function navigates to a specific PRISM screen. The function dumps the screen (x) into the Direct Command line.

new_page_check

panel_navigation_next

panel_navigation_prev

PF[#]
There are 20 separate PF[#] functions – one for each possible PF##. 
As an example, PF3 takes the place of EMSendKey “<PF3>”.
run_another_script(script_path)
This function creates a new File System Object that opens another script as a text file, reads the entire file, and executes the script.
script_path is the directory location of the script to be opened.
script_end_procedure(closing_message)
This function generates a closing_message to notify the user why the script has stopped. The variable (closing_message) is also used to populate the Access database that stores usage statistics with a reason why the script stopped. When the script has ended successfully, the database is not given any information about the script stoppage (closing_message = “”). When there is an error, the database populates with the contents of closing_message (useful for quality control or script debugging).

script_end_procedure_wsh(closing_message)

stat_navigation

step_through_handling


transmit
This function takes the place of the following two lines of code:
	EMSendKey “<enter>”
	EMWaitReady 0, 0
worker_county_code_determination_worker_county_code_variable, two_digit_county_code_variable)
 

write_editbox_in_case_note(x, y, z)
This function formats a string (y) being entered into a case note. This function retains the functionality from write_new_line_in_case_note(x) but enables for line headers (x) and indentation (z). The header must be stored in quotation marks. The function automatically places a colon ( : ) at the end of the header. The numeric value (z) is used for indenting any additional lines that the string flows on to.
If, for example,  the string (y) runs longer than one line, the function indents the remainder of the string on the next line “z” spaces.

write_new_line_in_case_note(x)
This function formats a string (x) being entered into a case note by constantly checking for the end of the page. Each word in the string is separated into an array and FOR EACH word in the array, the function checks for row = 17 and column = 75. If the case note hits the end of the page, the function sends a PF8 to create a new page and continues case noting.

write_new_line_in_SPEC_MEMO(variable_to_enter)

write_three_columns_in_case_note(col_01_start_point, col_01_variable, col_02_start_point, col_02_variable, col_03_start_point, col_03_variable)
write_TIKL_function(tikl_text)
This function receives a string (tikl_text) and formats it into usable chunks by separating it into strings of length equal to or less than 60 characters. 



IDEA: RadioBox group calendar … allows the worker 
IDEA: FUNCTION chain_run_another_script (script_to_run_array)
